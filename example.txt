$('#writeNewPost').on('click', function (event) {
        event.preventDefault();
        $('#writeNewPost').attr("disabled", "disabled");
        var postBody = stripHTML($('#newPost_body').val());
        var date = new Date();
        var postTime = date.getTime();
        var newPostKey = firebase.database().ref().child('posts').push().key;

        var matched = postBody.match(/(^#\S+)|(\s+#\S+)/g);
        if (matched != null) {
            [].forEach.call(matched, function (matchText) {
                var hashtagName = matchText.split("#");
                var template = '<a href="/search?tag={#n}" class="tag">{#}</a>';
                template = template.replace(/{#}/, matchText);
                template = template.replace(/{#n}/, hashtagName[1]);
                postBody = postBody.replace(matchText, template);
                var updates = {};
                updates['/hashtag/' + hashtagName[1] + '/' + newPostKey] = true;
                firebase.database().ref().update(updates);
                firebase.database().ref('/hashtag/' + hashtagName[1] + '/totalUsed').transaction(function (currentCount) {
                    return currentCount + 1;
                });
            });
        }

        var metadata = {
            contentType: 'image/png'
        };

        newImageFile.croppie('result', {
            type: 'blob',
            size: {
                width: 600,
                height: 600
            },
            format: 'png'
        }).then(function (resp) {
            var uploadTask = firebase.storage().ref().child('postImage/' + newPostKey).put(resp, metadata);
            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,
                function (snapshot) {
                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                    switch (snapshot.state) {
                        case firebase.storage.TaskState.PAUSED:
                            break;
                        case firebase.storage.TaskState.RUNNING:
                            break;
                    }
                },
                function (error) {
                    switch (error.code) {
                        case 'storage/unauthorized':
                            // User doesn't have permission to access the object
                            break;
                        case 'storage/canceled':
                            // User canceled the upload
                            break;
                        case 'storage/unknown':
                            // Unknown error occurred, inspect error.serverResponse
                            break;
                    }
                },
                function () {
                    // Upload completed successfully, now we can get the download URL
                    var downloadURL = uploadTask.snapshot.downloadURL;
                    // A post entry.
                    var postData = {
                        userId: currentUserId,
                        userName: userName,
                        userImage: userImage,
                        postBody: postBody,
                        postTime: postTime,
                        postImage: downloadURL,
                        likeCount: 0
                    };

                    var sets = {};
                    sets['/posts/' + newPostKey] = postData;
                    sets['/users/' + currentUserId + '/userPost/' + newPostKey] = downloadURL;
                    firebase.database().ref().update(sets);
                    firebase.database().ref('/users/' + currentUserId + '/userPostCount').transaction(function (currentCount) {
                        return currentCount + 1;
                    });
                    $('#newPost_body').val("");
                    $("#img_preview").empty();
                    newImageFile = null;

                    var thisYear = date.getFullYear();
                    var thisMonth = date.getMonth() + 1;
                    firebase.database().ref('statistic/' + thisYear + '-' + thisMonth + '/postCount').transaction(function (currentCount) {
                        return currentCount + 1;
                    });

                    $('#writeNewPost').removeAttr("disabled");
                });
        });
    });